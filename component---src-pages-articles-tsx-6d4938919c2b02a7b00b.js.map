{"version":3,"file":"component---src-pages-articles-tsx-6d4938919c2b02a7b00b.js","mappings":"iPA8IA,UAnImBA,IAEfC,EAAAA,EAAAA,IAACC,EAAAA,EAAM,CAACC,KAAK,WAAWC,OAAK,GAC1B,KACDH,EAAAA,EAAAA,IAAA,OAAKI,GAAI,CAAEC,QAAS,OAAQC,cAAe,MAAOC,SAAU,iBACzDR,EAAMS,KAAKC,QAAQC,MAAMC,SAASD,IACjCV,EAAAA,EAAAA,IAAA,OAAKI,GAAI,CAAEC,QAAS,OAAQC,cAAe,YACzCN,EAAAA,EAAAA,IAAA,UAAKU,EAAME,YACVF,EAAMG,MACJC,QAAQC,IAAI,IAAAC,EAAAC,EAAA,OAAkB,QAAlBD,EAAKD,EAAKG,gBAAQ,IAAAF,GAAa,QAAbC,EAAbD,EAAeG,mBAAW,IAAAF,OAAb,EAAbA,EAA4BG,KAAK,IAClDC,KAAI,CAACN,EAAMO,KAAM,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAChB,MAAMC,EAAkB,QAAhBL,EAAGR,EAAKG,gBAAQ,IAAAK,OAAA,EAAbA,EAAeJ,YACpBU,EACkC,QAD7BL,EACTM,EAAAA,WAAkB,QAARL,EAACG,EAAGG,YAAI,IAAAN,EAAAA,EAAI,CAAC,YAAY,WAAG,IAAAD,EAAAA,EAAIM,EAAAA,UAAAA,QAC5C,OACE9B,EAAAA,EAAAA,IAAA,OACEgC,IAAKJ,EAAGR,MACRhB,GAAI,CACF6B,OAAQ,EACRC,SAAU,IAAOZ,EAAI,EAAK,GAAMA,EAAI,EAAK,GACzCa,qBAAsB,GACtBC,wBAAyB,GACzBC,gBAAiBR,EAAQ,KACzBS,WAAY,SAAWT,EAAQ,UAGjC7B,EAAAA,EAAAA,IAAA,OACEI,GAAI,CACFC,QAAS,OACTC,cAAe,SACfiC,IAAK,KAGLvC,EAAAA,EAAAA,IAAA,OACEI,GAAI,CACFC,QAAS,OACTC,cAAe,MACfkC,WAAY,SACZD,IAAK,KAGPvC,EAAAA,EAAAA,IAAA,KACEI,GAAI,CACFiC,gBAAiB,QACjBF,qBAAsB,OACtBC,wBAAyB,OACzBK,QAAS,EACTC,SAAU,EACVC,WAAY,OACZC,OAAQ,SAAWf,EAAQ,OAC3BS,WAAY,SAGbV,EAAGiB,MAELjB,EAAGkB,SAAWlB,EAAGmB,MAChB/C,EAAAA,EAAAA,IAAA,MAAII,GAAI,CAAE4C,UAAW,SAAWpB,EAAGR,QAEnCpB,EAAAA,EAAAA,IAACiD,EAAAA,KAAI,CAACC,GAAItB,EAAGmB,OACX/C,EAAAA,EAAAA,IAAA,MAAII,GAAI,CAAE4C,UAAW,SAAWpB,EAAGR,UAIzCpB,EAAAA,EAAAA,IAAA,OAAKI,GAAI,CAAEsC,SAAU,KACnB1C,EAAAA,EAAAA,IAAA,SAAI4B,EAAGuB,aACNvB,EAAGkB,SACF9C,EAAAA,EAAAA,IAACoD,EAAAA,EAAa,KACQ,QADR1B,EACE,QADFC,EACXZ,EAAKG,gBAAQ,IAAAS,OAAA,EAAbA,EAAe0B,YAAI,IAAA3B,EAAAA,EAAI,KAI7BE,EAAG0B,aACFtD,EAAAA,EAAAA,IAAA,OACEI,GAAI,CACFmD,UAAW,SACXC,aAAc,EACdC,aAAc,EACdC,SAAU,SACVxB,SAAU,SAGZlC,EAAAA,EAAAA,IAAC2D,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAASjC,EAAG0B,YACnBQ,IAAKlC,EAAGmC,mBAKd,SA6CjB,MAAMC,EAAeA,KAAMhE,EAAAA,EAAAA,IAACiE,EAAAA,EAAQ,CAAC7C,MAAM,Y","sources":["webpack://lucas-pluvinage/./src/pages/articles.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\n\nimport * as React from \"react\";\nimport { graphql, Link, type HeadFC, type PageProps } from \"gatsby\";\nimport { Layout } from \"../components/Layout\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport ReactMarkdown from \"react-markdown\";\nimport { tagsColor } from \"./projects\";\nimport { SiteHead } from \"../components/Head\";\n\nconst IndexPage = (props: PageProps<Queries.ArticlesQuery>) => {\n  return (\n    <Layout page=\"articles\" large>\n      {\" \"}\n      <div sx={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap-reverse\" }}>\n        {props.data.allFile.group.flatMap((group) => (\n          <div sx={{ display: \"flex\", flexDirection: \"column\" }}>\n            <h1>{group.fieldValue}</h1>\n            {group.nodes\n              .filter((node) => node.childMdx?.frontmatter?.title)\n              .map((node, i) => {\n                const fm = node.childMdx?.frontmatter!;\n                const color =\n                  tagsColor[(fm.tags ?? [\"default\"])[0]] ?? tagsColor.default;\n                return (\n                  <div\n                    key={fm.title}\n                    sx={{\n                      margin: 2,\n                      maxWidth: 450 + (i % 3) * 20 - (i % 2) * 10,\n                      borderTopRightRadius: 24,\n                      borderBottomRightRadius: 24,\n                      backgroundColor: color + \"40\",\n                      borderLeft: \"solid \" + color + \" 8px\",\n                    }}\n                  >\n                    <div\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: 1,\n                      }}\n                    >\n                        <div\n                          sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            gap: 3,\n                          }}\n                        >\n                          <p\n                            sx={{\n                              backgroundColor: \"white\",\n                              borderTopRightRadius: \"16px\",\n                              borderBottomRightRadius: \"16px\",\n                              padding: 1,\n                              paddingX: 2,\n                              marginLeft: \"-8px\",\n                              border: \"solid \" + color + \" 4px\",\n                              borderLeft: \"none\",\n                            }}\n                          >\n                            {fm.date}\n                          </p>\n                          {fm.inline || !fm.slug ? (\n                            <h2 sx={{ textAlign: \"left\" }}>{fm.title}</h2>\n                          ) : (\n                            <Link to={fm.slug}>\n                              <h2 sx={{ textAlign: \"left\" }}>{fm.title}</h2>\n                            </Link>\n                          )}\n                        </div>\n                        <div sx={{ paddingX: 3 }}>\n                          <p>{fm.description}</p>\n                          {fm.inline && (\n                            <ReactMarkdown>\n                              {node.childMdx?.body ?? \"\"}\n                            </ReactMarkdown>\n                          )}\n                        </div>\n                        {fm.hero_image && (\n                          <div\n                            sx={{\n                              alignSelf: \"center\",\n                              borderRadius: 8,\n                              marginBottom: 3,\n                              overflow: \"hidden\",\n                              maxWidth: \"90%\",\n                            }}\n                          >\n                            <GatsbyImage\n                              image={getImage(fm.hero_image)}\n                              alt={fm.hero_image_alt}\n                            />\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query Articles {\n    allFile(\n      filter: { sourceInstanceName: { eq: \"articles\" } }\n      sort: { childMdx: { frontmatter: { date: DESC } } }\n    ) {\n      group(field: { childMdx: { frontmatter: { category: SELECT } } }) {\n        fieldValue\n\n        nodes {\n          childMdx {\n            frontmatter {\n              title\n              description\n              date(formatString: \"DD/MM/YYYY\")\n              tags\n              inline\n              slug\n              hero_image_alt\n              hero_image {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n            body\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <SiteHead title=\"Articles\" />;\n"],"names":["props","jsx","Layout","page","large","sx","display","flexDirection","flexWrap","data","allFile","group","flatMap","fieldValue","nodes","filter","node","_node$childMdx","_node$childMdx$frontm","childMdx","frontmatter","title","map","i","_node$childMdx2","_tagsColor$","_fm$tags","_node$childMdx$body","_node$childMdx3","fm","color","tagsColor","tags","key","margin","maxWidth","borderTopRightRadius","borderBottomRightRadius","backgroundColor","borderLeft","gap","alignItems","padding","paddingX","marginLeft","border","date","inline","slug","textAlign","Link","to","description","ReactMarkdown","body","hero_image","alignSelf","borderRadius","marginBottom","overflow","GatsbyImage","image","getImage","alt","hero_image_alt","Head","SiteHead"],"sourceRoot":""}