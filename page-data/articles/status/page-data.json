{"componentChunkName":"component---src-pages-mdx-frontmatter-variant-mdx-frontmatter-slug-tsx-content-file-path-src-data-articles-2018-10-02-status-mdx","path":"/articles/status/","result":{"data":{"mdx":{"frontmatter":{"title":"Work in progress status and links","description":"This article holds my Github projects links related to Mirage-OCaml-ESP32 and will be updated with my progress. It also serve as my notepad and thought long-term storage so you might expect random stuff there too!","date":"2018-10-02 12:00","tags":null,"inline":null,"slug":"status","hero_image_alt":null,"variant":"articles","hero_image":null},"body":"\n* We now have native compilation for ESP32! That opens a lot of possibilities!\n* Mirage is available for ESP32 target, it allows to build complex applications for this platform, such as an HTTPS server.\n* All this work is stored under a Github organization: [well-typed-lightbulbs](https://github.com/well-typed-lightbulbs).\n\n## Native backend\n\n* OCaml 4.06.0 with xtensa target and custom settings to build the bytecode runtime on the ESP32. The best way to have a functional cross-esp32 toolchain is to install the `ocaml-esp32` opam package from opam-cross-esp32. It requires an `4.06.0+32bit` base compiler.\n  - [Github - ocaml-esp32](https://github.com/well-typed-lightbulbs/ocaml-esp32)\n* I have code generation and linking working. This is an example with the files I used to build my native hello world!\n  - [Github - ocaml docker sample](https://github.com/well-typed-lightbulbs/esp32-docker-samples/tree/master/ocaml)\n\n## Cross-compilation of a Mirage unikernel\n\n* See [Build your own Mirage](https://www.lortex.org/posts/mirage/esp32/2018/06/22/build-your-own-mirage.html) article to find out more about building a Mirage unikernel.\n\n## Mirage unikernel samples\n\n* Three sample docker scripts that build for ESP32: [esp32-docker-samples](https://github.com/well-typed-lightbulbs/esp32-docker-samples). They build C, OCaml and Mirage code.\n* Three sample Mirage applications: [mirage-esp32-samples](https://github.com/well-typed-lightbulbs/mirage-esp32-samples). `hello_world`: a basic printer. `ap_dhcp`: an access point delivering IPs trough DHCP. `lcd_wifi_demo`: makes use of network and lcd screen features. "}},"pageContext":{"id":"d56e4bf7-cbb7-58ff-9cf6-13f35f6e5604","frontmatter__variant":"articles","frontmatter__slug":"status","__params":{"frontmatter__variant":"articles","frontmatter__slug":"status"},"frontmatter":{"layout":"post","title":"Work in progress status and links","date":"2018-10-02 12:00","category":"esp32","description":"This article holds my Github projects links related to Mirage-OCaml-ESP32 and will be updated with my progress. It also serve as my notepad and thought long-term storage so you might expect random stuff there too!","slug":"status","variant":"articles"}}},"staticQueryHashes":["2744905544"],"slicesMap":{}}