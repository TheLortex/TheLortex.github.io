{"version":3,"file":"component---src-pages-photography-tsx-ec67f9b17aafd3f9b7fc.js","mappings":"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","sources":["webpack://lucas-pluvinage/./node_modules/react-photo-album/dist/index.mjs","webpack://lucas-pluvinage/./src/pages/photography.tsx"],"sourcesContent":["import * as React from 'react';\n\nfunction ratio({ width, height }) {\n    return width / height;\n}\n\nfunction round(value, decimals = 0) {\n    const factor = 10 ** decimals;\n    return Math.round((value + Number.EPSILON) * factor) / factor;\n}\n\nfunction rankingFunctionComparator(rank) {\n    return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n    constructor(comparator) {\n        this.comparator = comparator;\n        this.heap = [];\n        this.n = 0;\n    }\n    greater(i, j) {\n        return this.comparator(this.heap[i], this.heap[j]) < 0;\n    }\n    swap(i, j) {\n        const temp = this.heap[i];\n        this.heap[i] = this.heap[j];\n        this.heap[j] = temp;\n    }\n    swim(i) {\n        let k = i;\n        let k2 = Math.floor(k / 2);\n        while (k > 1 && this.greater(k2, k)) {\n            this.swap(k2, k);\n            k = k2;\n            k2 = Math.floor(k / 2);\n        }\n    }\n    sink(i) {\n        let k = i;\n        let k2 = k * 2;\n        while (k2 <= this.n) {\n            if (k2 < this.n && this.greater(k2, k2 + 1))\n                k2 += 1;\n            if (!this.greater(k, k2))\n                break;\n            this.swap(k, k2);\n            k = k2;\n            k2 = k * 2;\n        }\n    }\n    push(element) {\n        this.n += 1;\n        this.heap[this.n] = element;\n        this.swim(this.n);\n    }\n    pop() {\n        if (this.n === 0)\n            return undefined;\n        this.swap(1, this.n);\n        this.n -= 1;\n        const max = this.heap.pop();\n        this.sink(1);\n        return max;\n    }\n    size() {\n        return this.n;\n    }\n}\n\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n    const precedentsMap = new Map();\n    const visited = new Set();\n    const storedShortestPaths = new Map();\n    storedShortestPaths.set(startNode, 0);\n    const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n    queue.push({ id: startNode, weight: 0 });\n    while (queue.size() > 0) {\n        const { id, weight } = queue.pop();\n        if (!visited.has(id)) {\n            const neighboringNodes = graph(id);\n            visited.add(id);\n            neighboringNodes.forEach((neighborWeight, neighbor) => {\n                const newWeight = weight + neighborWeight;\n                const currentId = precedentsMap.get(neighbor);\n                const currentWeight = storedShortestPaths.get(neighbor);\n                if (currentWeight === undefined ||\n                    (currentWeight > newWeight &&\n                        (currentWeight / newWeight > 1.005 || (currentId !== undefined && currentId < id)))) {\n                    storedShortestPaths.set(neighbor, newWeight);\n                    queue.push({ id: neighbor, weight: newWeight });\n                    precedentsMap.set(neighbor, id);\n                }\n            });\n        }\n    }\n    return storedShortestPaths.has(endNode) ? precedentsMap : undefined;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n    const nodes = [];\n    for (let node = endNode; node !== undefined; node = precedentsMap.get(node)) {\n        nodes.push(node);\n    }\n    return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n    const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n    return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\n}\n\nfunction findIdealNodeSearch({ photos, targetRowHeight, containerWidth, }) {\n    const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n    return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n    const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n    const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n    return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n    const row = photos.slice(i, j);\n    const commonHeight = getCommonHeight(row, width, spacing, padding);\n    return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\n}\nfunction makeGetRowNeighbors({ photos, layoutOptions, targetRowHeight, limitNodeSearch, rowConstraints, }) {\n    return (node) => {\n        var _a, _b;\n        const { containerWidth, spacing, padding } = layoutOptions;\n        const results = new Map();\n        results.set(node, 0);\n        const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\n        const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\n        for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n            if (i - node > endOffset)\n                break;\n            const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n            if (currentCost === undefined)\n                break;\n            results.set(i, currentCost);\n        }\n        return results;\n    };\n}\nfunction computeRowsLayout({ photos, layoutOptions, }) {\n    const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n    const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n    const getNeighbors = makeGetRowNeighbors({\n        photos,\n        layoutOptions,\n        targetRowHeight,\n        limitNodeSearch,\n        rowConstraints,\n    });\n    const path = findShortestPath(getNeighbors, 0, photos.length);\n    if (path === undefined)\n        return undefined;\n    const layout = [];\n    for (let i = 1; i < path.length; i += 1) {\n        const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n        const height = getCommonHeight(row.map(({ photo }) => photo), containerWidth, spacing, padding);\n        layout.push(row.map(({ photo, index }, photoIndex) => ({\n            photo,\n            layout: {\n                height,\n                width: height * ratio(photo),\n                index,\n                photoIndex,\n                photosCount: row.length,\n            },\n        })));\n    }\n    return layout;\n}\n\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n    const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n    return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n    return layoutOptions.layout !== \"rows\"\n        ? `calc(100% - ${2 * layoutOptions.padding}px)`\n        : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n    var _a, _b;\n    return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n    let srcSet;\n    let sizes;\n    if (photo.images && photo.images.length > 0) {\n        srcSet = photo.images\n            .concat(!photo.images.find(({ width }) => width === photo.width)\n            ? [{ src: photo.src, width: photo.width, height: photo.height }]\n            : [])\n            .sort((first, second) => first.width - second.width)\n            .map((image) => `${image.src} ${image.width}w`)\n            .join(\", \");\n    }\n    if (layoutOptions.sizes) {\n        sizes = (layoutOptions.sizes.sizes || [])\n            .map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`)\n            .concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions))\n            .join(\", \");\n    }\n    else if (srcSet) {\n        sizes = `${Math.ceil((layout.width / layoutOptions.containerWidth) * 100)}vw`;\n    }\n    return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n    var _a, _b;\n    const { photo, layout, layoutOptions, imageProps: { style, ...restImageProps } = {}, renderPhoto } = props;\n    const { onClick } = layoutOptions;\n    const imageStyle = {\n        display: \"block\",\n        boxSizing: \"content-box\",\n        width: cssPhotoWidth(layout, layoutOptions),\n        height: \"auto\",\n        aspectRatio: `${photo.width} / ${photo.height}`,\n        ...(layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null),\n        ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") &&\n            layout.photoIndex < layout.photosCount - 1\n            ? { marginBottom: `${layoutOptions.spacing}px` }\n            : null),\n        ...(onClick ? { cursor: \"pointer\" } : null),\n        ...style,\n    };\n    const handleClick = onClick\n        ? (event) => {\n            onClick({ event, photo, index: layout.index });\n        }\n        : undefined;\n    const imageProps = {\n        src: photo.src,\n        alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\n        title: photo.title,\n        onClick: handleClick,\n        style: imageStyle,\n        className: \"react-photo-album--photo\",\n        loading: \"lazy\",\n        decoding: \"async\",\n        ...srcSetAndSizes(photo, layout, layoutOptions),\n        ...restImageProps,\n    };\n    const renderDefaultPhoto = (options) => {\n        const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n        return (React.createElement(\"img\", { alt: alt, ...(srcSet ? { srcSet, sizes } : null), src: src, style: (options === null || options === void 0 ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle, ...rest }));\n    };\n    const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n        display,\n        boxSizing,\n        width,\n        aspectRatio,\n        padding,\n        marginBottom,\n        cursor,\n    }))(imageStyle);\n    return (React.createElement(React.Fragment, null, (_b = renderPhoto === null || renderPhoto === void 0 ? void 0 : renderPhoto({\n        photo,\n        layout,\n        layoutOptions,\n        imageProps,\n        renderDefaultPhoto,\n        wrapperStyle,\n    })) !== null && _b !== void 0 ? _b : renderDefaultPhoto()));\n}\n\nfunction defaultRenderRowContainer({ rowContainerProps, children, }) {\n    return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n    const { layoutOptions, rowIndex, rowsCount, renderRowContainer, rowContainerProps: { style, ...restRowContainerProps } = {}, children, } = props;\n    const rowContainerProps = {\n        className: \"react-photo-album--row\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"nowrap\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            ...(rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null),\n            ...style,\n        },\n        ...restRowContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\n        layoutOptions,\n        rowIndex,\n        rowsCount,\n        rowContainerProps,\n        children,\n    })));\n}\n\nfunction RowsLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderRowContainer, componentsProps } = props;\n    const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n    if (!rowsLayout)\n        return null;\n    return (React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => (React.createElement(RowContainerRenderer, { key: `row-${rowIndex}`, layoutOptions: layoutOptions, rowIndex: rowIndex, rowsCount: rowsLayout.length, renderRowContainer: renderRowContainer, rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps }, row.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n    const matrix = new Map();\n    const queue = new Set();\n    queue.add(startNode);\n    for (let length = 0; length < pathLength; length += 1) {\n        const currentQueue = [...queue.keys()];\n        queue.clear();\n        currentQueue.forEach((node) => {\n            const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n            graph(node).forEach(({ neighbor, weight }) => {\n                let paths = matrix.get(neighbor);\n                if (!paths) {\n                    paths = [];\n                    matrix.set(neighbor, paths);\n                }\n                const newWeight = accumulatedWeight + weight;\n                const nextPath = paths[length + 1];\n                if (!nextPath ||\n                    (nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node))) {\n                    paths[length + 1] = { node, weight: newWeight };\n                }\n                if (length < pathLength - 1 && neighbor !== endNode) {\n                    queue.add(neighbor);\n                }\n            });\n        });\n    }\n    return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n    const path = [endNode];\n    for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n        node = matrix.get(node)[length].node;\n        path.push(node);\n    }\n    return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n    return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\n\nfunction makeGetColumnNeighbors({ photos, spacing, padding, targetColumnWidth, targetColumnHeight, }) {\n    return (node) => {\n        const results = [];\n        const cutOffHeight = targetColumnHeight * 1.5;\n        let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n        for (let i = node + 1; i < photos.length + 1; i += 1) {\n            results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n            if (height > cutOffHeight || i === photos.length) {\n                break;\n            }\n            height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n        }\n        return results;\n    };\n}\nfunction buildColumnsModel({ path, photos, containerWidth, columnsGaps, columnsRatios, spacing, padding, }) {\n    const columnsModel = [];\n    const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n    for (let i = 0; i < path.length - 1; i += 1) {\n        const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n        const totalAdjustedGaps = columnsRatios.reduce((total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio, 0);\n        const columnWidth = ((containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) *\n            columnsRatios[i]) /\n            totalRatio;\n        columnsModel.push(column.map(({ photo, index }, photoIndex) => ({\n            photo,\n            layout: {\n                width: columnWidth,\n                height: columnWidth / ratio(photo),\n                index,\n                photoIndex,\n                photosCount: column.length,\n            },\n        })));\n    }\n    return columnsModel;\n}\nfunction computeColumnsModel({ photos, layoutOptions, targetColumnWidth, }) {\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const columnsGaps = [];\n    const columnsRatios = [];\n    if (photos.length <= columns) {\n        const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n        for (let i = 0; i < columns; i += 1) {\n            columnsGaps[i] = 2 * padding;\n            columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n        }\n        const columnsModel = buildColumnsModel({\n            path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n            photos,\n            columnsRatios,\n            columnsGaps,\n            containerWidth,\n            spacing,\n            padding,\n        });\n        return { columnsGaps, columnsRatios, columnsModel };\n    }\n    const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) +\n        spacing * (photos.length - columns) +\n        2 * padding * photos.length) /\n        columns;\n    const getNeighbors = makeGetColumnNeighbors({\n        photos,\n        targetColumnWidth,\n        targetColumnHeight,\n        spacing,\n        padding,\n    });\n    const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n    for (let i = 0; i < path.length - 1; i += 1) {\n        const column = photos.slice(path[i], path[i + 1]);\n        columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n        columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n    }\n    const columnsModel = buildColumnsModel({\n        path,\n        photos,\n        columnsRatios,\n        columnsGaps,\n        containerWidth,\n        spacing,\n        padding,\n    });\n    return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n    const { photos, layoutOptions } = props;\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n    const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n        photos,\n        layoutOptions,\n        targetColumnWidth,\n    });\n    if (columnsModel.findIndex((columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0) >= 0) {\n        if (columns > 1) {\n            return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n        }\n        return undefined;\n    }\n    return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({ photos, layoutOptions, }) {\n    return computeLayout({ photos, layoutOptions });\n}\n\nfunction defaultRenderColumnContainer({ columnContainerProps, children, }) {\n    return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n    const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n    const { layout, spacing, padding } = layoutOptions;\n    if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n        return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n    }\n    const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n    const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\n    return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n    const { layoutOptions, renderColumnContainer, children, columnContainerProps: { style, ...restColumnContainerProps } = {}, ...rest } = props;\n    const columnContainerProps = {\n        className: \"react-photo-album--column\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"nowrap\",\n            alignItems: \"flex-start\",\n            width: cssColumnWidth(props),\n            justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n            ...style,\n        },\n        ...restColumnContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\n        layoutOptions,\n        columnContainerProps,\n        children,\n        ...rest,\n    })));\n}\n\nfunction ColumnsLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps } = props;\n    const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n    if (!columnsLayout)\n        return null;\n    const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n    return (React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => (React.createElement(ColumnContainerRenderer, { key: `column-${columnIndex}`, layoutOptions: layoutOptions, columnIndex: columnIndex, columnsCount: columnsModel.length, columnsGaps: columnsGaps, columnsRatios: columnsRatios, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps }, column.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction computeMasonryLayout(props) {\n    const { photos, layoutOptions } = props;\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n    if (columnWidth <= 0) {\n        return columns > 1\n            ? computeMasonryLayout({\n                ...props,\n                layoutOptions: { ...layoutOptions, columns: columns - 1 },\n            })\n            : undefined;\n    }\n    const columnsCurrentTopPositions = [];\n    for (let i = 0; i < columns; i += 1) {\n        columnsCurrentTopPositions[i] = 0;\n    }\n    const columnsModel = photos.reduce((model, photo, index) => {\n        const shortestColumn = columnsCurrentTopPositions.reduce((currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn, 0);\n        columnsCurrentTopPositions[shortestColumn] =\n            columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n        model[shortestColumn].push({ photo, index });\n        return model;\n    }, Array.from({ length: columns }).map(() => []));\n    return columnsModel.map((column) => column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n            width: columnWidth,\n            height: columnWidth / ratio(photo),\n            index,\n            photoIndex,\n            photosCount: column.length,\n        },\n    })));\n}\n\nfunction MasonryLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps } = props;\n    const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n    if (!masonryLayout)\n        return null;\n    return (React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => (React.createElement(ColumnContainerRenderer, { key: `masonry-column-${columnIndex}`, layoutOptions: layoutOptions, columnsCount: masonryLayout.length, columnIndex: columnIndex, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps }, column.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n    return (React.createElement(\"div\", { ref: containerRef, ...containerProps }, children));\n}\nfunction ContainerRenderer(props) {\n    const { layout, renderContainer, children, containerRef, containerProps: { style, ...restContainerProps } = {}, } = props;\n    const containerProps = {\n        className: `react-photo-album react-photo-album--${layout}`,\n        style: {\n            display: \"flex\",\n            flexWrap: \"nowrap\",\n            justifyContent: \"space-between\",\n            flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n            ...style,\n        },\n        ...restContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\n        containerProps,\n        containerRef,\n        layout,\n        children,\n    })));\n}\n\nfunction useArray(array) {\n    const ref = React.useRef(array);\n    if (!array || !ref.current || array.join() !== ref.current.join()) {\n        ref.current = array;\n    }\n    return ref.current;\n}\n\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n    const { containerWidth, scrollbarWidth } = state;\n    if (containerWidth !== undefined &&\n        scrollbarWidth !== undefined &&\n        newContainerWidth !== undefined &&\n        newScrollbarWidth !== undefined &&\n        newContainerWidth > containerWidth &&\n        newContainerWidth - containerWidth <= 20 &&\n        newScrollbarWidth < scrollbarWidth) {\n        return { containerWidth, scrollbarWidth: newScrollbarWidth };\n    }\n    return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth\n        ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth }\n        : state;\n}\nfunction resolveContainerWidth(el, breakpoints) {\n    let width = el === null || el === void 0 ? void 0 : el.clientWidth;\n    if (width !== undefined && breakpoints && breakpoints.length > 0) {\n        const sorted = [...breakpoints.filter((x) => x > 0)].sort((a, b) => b - a);\n        sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n        const threshold = width;\n        width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n    }\n    return width;\n}\nfunction useContainerWidth(breakpoints, defaultContainerWidth) {\n    const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n        containerWidth: defaultContainerWidth,\n    });\n    const ref = React.useRef(null);\n    const observerRef = React.useRef();\n    const containerRef = React.useCallback((node) => {\n        var _a;\n        (_a = observerRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();\n        observerRef.current = undefined;\n        ref.current = node;\n        const updateWidth = () => dispatch({\n            newContainerWidth: resolveContainerWidth(ref.current, breakpoints),\n            newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth,\n        });\n        updateWidth();\n        if (node && typeof ResizeObserver !== \"undefined\") {\n            observerRef.current = new ResizeObserver(updateWidth);\n            observerRef.current.observe(node);\n        }\n    }, [breakpoints]);\n    return { containerRef, containerWidth };\n}\n\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, containerWidth) {\n    return typeof value === \"function\" ? value(containerWidth) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n    return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n    const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n    return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n    const value = unwrapParameter(parameter, containerWidth);\n    return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\n\nfunction resolveLayoutOptions({ layout, onClick, containerWidth, targetRowHeight, rowConstraints, columns, spacing, padding, sizes, }) {\n    return {\n        layout,\n        onClick,\n        containerWidth,\n        columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n        spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n        padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n        targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n            (w) => w / 5,\n            (w) => w / 4,\n            (w) => w / 3,\n            (w) => w / 2,\n        ]),\n        rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n        sizes,\n    };\n}\nfunction resolveComponentsProps(componentsProps, containerWidth) {\n    return typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\n}\nfunction renderLayout(props, containerWidth, componentsProps) {\n    const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n    const layoutOptions = resolveLayoutOptions({ containerWidth, ...props });\n    const commonLayoutProps = { photos, renderPhoto, componentsProps };\n    if (layout === \"rows\") {\n        return (React.createElement(RowsLayout, { layoutOptions: layoutOptions, renderRowContainer: renderRowContainer, ...commonLayoutProps }));\n    }\n    if (layout === \"columns\") {\n        return (React.createElement(ColumnsLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps }));\n    }\n    return (React.createElement(MasonryLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps }));\n}\nfunction PhotoAlbum(props) {\n    const { photos, layout, renderContainer, defaultContainerWidth, breakpoints } = props;\n    const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints), defaultContainerWidth);\n    if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n        return null;\n    const componentsProps = resolveComponentsProps(props.componentsProps, containerWidth);\n    return (React.createElement(ContainerRenderer, { layout: layout, containerRef: containerRef, renderContainer: renderContainer, containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps }, containerWidth ? renderLayout(props, containerWidth, componentsProps) : null));\n}\n\nexport { PhotoAlbum, PhotoAlbum as default };\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\n\nimport * as React from \"react\";\nimport { graphql, type HeadFC, type PageProps } from \"gatsby\";\nimport { Layout } from \"../components/Layout\";\nimport PhotoAlbum from \"react-photo-album\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst IndexPage = (props: PageProps<Queries.PhotosQuery>) => {\n  return (\n    <Layout page=\"photography\" large>\n      <h1>i like taking pictures</h1>\n      <PhotoAlbum\n        layout=\"rows\"\n        photos={props.data.allFile.nodes.map((p) => ({\n          width: p.childImageSharp?.gatsbyImageData?.width ?? 0,\n          height: p.childImageSharp?.gatsbyImageData?.height ?? 0,\n          src: p.childImageSharp?.gatsbyImageData?.images?.fallback?.src ?? \"\",\n          gatsby: p.childImageSharp?.gatsbyImageData,\n        }))}\n        renderImage={(photo) => (\n          <GatsbyImage\n            image={photo.gatsby}\n            alt=\"photo\"\n            sx={{ width: \"100%\", height: \"100%\" }}\n          />\n        )}\n      />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query Photos {\n    allFile(filter: { sourceInstanceName: { eq: \"pics\" } }) {\n      nodes {\n        childImageSharp {\n          gatsbyImageData(width: 1000)\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Photography</title>;\n"],"names":["ratio","width","height","round","value","decimals","factor","Math","Number","EPSILON","MinHeap","constructor","comparator","this","heap","n","greater","i","j","swap","temp","swim","k","k2","floor","sink","push","element","pop","max","size","findShortestPath","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","queue","rank","el","weight","a","b","id","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","undefined","buildPrecedentsMap","nodes","node","reverse","getPathFromPrecedentsMap","getCommonHeight","row","containerWidth","spacing","padding","length","reduce","acc","photo","cost","photos","targetRowHeight","slice","commonHeight","computeRowsLayout","layoutOptions","rowConstraints","limitNodeSearch","min","MAX_VALUE","findIdealNodeSearch","getNeighbors","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","makeGetRowNeighbors","path","layout","map","index","photoIndex","photosCount","calcWidth","base","gaps","cssPhotoWidth","calculateSizesValue","match","srcSetAndSizes","srcSet","sizes","images","concat","find","src","sort","first","second","image","join","viewport","ceil","PhotoRenderer","props","imageProps","style","restImageProps","renderPhoto","onClick","imageStyle","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","alt","title","className","loading","decoding","renderDefaultPhoto","options","unwrappedStyle","rest","wrapped","wrapperStyle","defaultRenderRowContainer","rowContainerProps","children","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","componentsProps","rowsLayout","key","findShortestPathLengthN","pathLength","matrix","reconstructShortestPath","currentQueue","keys","clear","accumulatedWeight","paths","nextPath","computeShortestPath","buildColumnsModel","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","column","totalAdjustedGaps","columnWidth","computeColumnsModel","targetColumnWidth","columns","averageRatio","Array","from","_","targetColumnHeight","cutOffHeight","makeGetColumnNeighbors","computeLayout","findIndex","columnModel","computeColumnsLayout","defaultRenderColumnContainer","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ColumnContainerRenderer","renderColumnContainer","restColumnContainerProps","ColumnsLayout","columnsLayout","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","MasonryLayout","masonryLayout","defaultRenderContainer","containerProps","containerRef","ref","ContainerRenderer","renderContainer","restContainerProps","containerWidthReducer","state","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints","clientWidth","sorted","filter","x","threshold","breakpoint","Object","freeze","unwrap","unwrapParameter","resolveResponsiveParameter","parameter","values","minValue","selectResponsiveValue","renderLayout","w","resolveLayoutOptions","commonLayoutProps","PhotoAlbum","defaultContainerWidth","dispatch","observerRef","current","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","useContainerWidth","array","useArray","includes","isArray","resolveComponentsProps","jsx","Layout","page","large","data","allFile","p","_p$childImageSharp$ga","_p$childImageSharp","_p$childImageSharp$ga2","_p$childImageSharp$ga3","_p$childImageSharp2","_p$childImageSharp2$g","_p$childImageSharp$ga4","_p$childImageSharp3","_p$childImageSharp3$g","_p$childImageSharp3$g2","_p$childImageSharp3$g3","_p$childImageSharp4","childImageSharp","gatsbyImageData","fallback","gatsby","renderImage","GatsbyImage","sx","Head"],"sourceRoot":""}