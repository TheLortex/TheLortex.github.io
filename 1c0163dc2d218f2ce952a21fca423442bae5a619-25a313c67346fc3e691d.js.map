{"version":3,"file":"1c0163dc2d218f2ce952a21fca423442bae5a619-25a313c67346fc3e691d.js","mappings":"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","sources":["webpack://lucas-pluvinage/./node_modules/core-js/internals/a-callable.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/add-to-unscopables.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/an-object.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/array-includes.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/classof-raw.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/define-global-property.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/descriptors.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/document-all.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/document-create-element.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/engine-user-agent.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/engine-v8-version.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/enum-bug-keys.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/fails.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/function-bind-native.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/function-call.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/function-uncurry-this.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/get-built-in.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/get-method.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/global.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/has-own-property.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/hidden-keys.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/html.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/ie8-dom-define.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/indexed-object.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/is-callable.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/is-object.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/is-pure.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/is-symbol.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/length-of-array-like.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/math-trunc.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/object-create.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/object-define-properties.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/object-define-property.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/object-keys-internal.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/object-keys.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/require-object-coercible.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/shared-key.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/shared-store.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/shared.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/to-absolute-index.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/to-indexed-object.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/to-length.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/to-object.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/to-primitive.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/to-property-key.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/try-to-string.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/uid.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://lucas-pluvinage/./node_modules/core-js/internals/well-known-symbol.js","webpack://lucas-pluvinage/./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack://lucas-pluvinage/./node_modules/extend/index.js","webpack://lucas-pluvinage/./src/pages/projects.tsx","webpack://lucas-pluvinage/./node_modules/inline-style-parser/index.js","webpack://lucas-pluvinage/./node_modules/is-buffer/index.js","webpack://lucas-pluvinage/./node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","webpack://lucas-pluvinage/./node_modules/react-markdown/node_modules/react-is/index.js","webpack://lucas-pluvinage/./node_modules/style-to-object/index.js","webpack://lucas-pluvinage/./node_modules/unist-util-stringify-position/lib/index.js","webpack://lucas-pluvinage/./node_modules/vfile-message/lib/index.js","webpack://lucas-pluvinage/./node_modules/vfile/lib/minpath.browser.js","webpack://lucas-pluvinage/./node_modules/vfile/lib/minproc.browser.js","webpack://lucas-pluvinage/./node_modules/vfile/lib/minurl.shared.js","webpack://lucas-pluvinage/./node_modules/vfile/lib/minurl.browser.js","webpack://lucas-pluvinage/./node_modules/vfile/lib/index.js","webpack://lucas-pluvinage/./node_modules/bail/index.js","webpack://lucas-pluvinage/./node_modules/is-plain-obj/index.js","webpack://lucas-pluvinage/./node_modules/trough/index.js","webpack://lucas-pluvinage/./node_modules/unified/lib/index.js","webpack://lucas-pluvinage/./node_modules/mdast-util-to-string/lib/index.js","webpack://lucas-pluvinage/./node_modules/micromark-util-chunked/index.js","webpack://lucas-pluvinage/./node_modules/micromark-util-combine-extensions/index.js","webpack://lucas-pluvinage/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://lucas-pluvinage/./node_modules/micromark-util-character/index.js","webpack://lucas-pluvinage/./node_modules/micromark-factory-space/index.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/initialize/content.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/initialize/document.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://lucas-pluvinage/./node_modules/micromark-util-subtokenize/index.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/content.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/initialize/flow.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/initialize/text.js","webpack://lucas-pluvinage/./node_modules/micromark-util-resolve-all/index.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/create-tokenizer.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/list.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://lucas-pluvinage/./node_modules/micromark-factory-destination/index.js","webpack://lucas-pluvinage/./node_modules/micromark-factory-label/index.js","webpack://lucas-pluvinage/./node_modules/micromark-factory-title/index.js","webpack://lucas-pluvinage/./node_modules/micromark-factory-whitespace/index.js","webpack://lucas-pluvinage/./node_modules/micromark-util-normalize-identifier/index.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://lucas-pluvinage/./node_modules/micromark-util-html-tag-name/index.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://lucas-pluvinage/./node_modules/decode-named-character-reference/index.dom.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://lucas-pluvinage/./node_modules/micromark-util-classify-character/index.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://lucas-pluvinage/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/constructs.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/parse.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/preprocess.js","webpack://lucas-pluvinage/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://lucas-pluvinage/./node_modules/micromark-util-decode-string/index.js","webpack://lucas-pluvinage/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://lucas-pluvinage/./node_modules/micromark/lib/postprocess.js","webpack://lucas-pluvinage/./node_modules/remark-parse/index.js","webpack://lucas-pluvinage/./node_modules/remark-parse/lib/index.js","webpack://lucas-pluvinage/./node_modules/micromark-util-sanitize-uri/index.js","webpack://lucas-pluvinage/./node_modules/unist-util-is/lib/index.js","webpack://lucas-pluvinage/./node_modules/unist-util-visit/node_modules/unist-util-visit-parents/lib/index.js","webpack://lucas-pluvinage/./node_modules/unist-util-visit/lib/index.js","webpack://lucas-pluvinage/./node_modules/unist-util-position/lib/index.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-definitions/lib/index.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://lucas-pluvinage/./node_modules/trim-lines/index.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/state.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/unist-util-generated/lib/index.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack://lucas-pluvinage/./node_modules/remark-rehype/lib/index.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/util/schema.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/util/merge.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/normalize.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/util/info.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/util/types.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/util/defined-info.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/util/create.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/xlink.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/xml.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/xmlns.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/aria.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/html.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/svg.js","webpack://lucas-pluvinage/./node_modules/property-information/index.js","webpack://lucas-pluvinage/./node_modules/react-markdown/lib/rehype-filter.js","webpack://lucas-pluvinage/./node_modules/hast-util-whitespace/index.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/find.js","webpack://lucas-pluvinage/./node_modules/property-information/lib/hast-to-react.js","webpack://lucas-pluvinage/./node_modules/style-to-object/index.mjs","webpack://lucas-pluvinage/./node_modules/react-markdown/lib/uri-transformer.js","webpack://lucas-pluvinage/./node_modules/react-markdown/lib/ast-to-react.js","webpack://lucas-pluvinage/./node_modules/comma-separated-tokens/index.js","webpack://lucas-pluvinage/./node_modules/space-separated-tokens/index.js","webpack://lucas-pluvinage/./node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  defineProperty(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","module.exports = {};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = false;\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.30.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.30.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\n\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Link, graphql } from \"gatsby\";\nimport { Layout } from \"../components/Layout\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport ReactMarkdown from \"react-markdown\";\nimport { SiteHead } from \"../components/Head\";\n\nexport const tagsColor = {\n  forevr: \"#B5A8FF\",\n  systems: \"#FFB4B4\",\n  ocaml: \"#FFDEB4\",\n  \"machine learning\": \"#B5A8FF\",\n  hardware: \"#FDF7C3\",\n  default: \"#c8c8ff\",\n};\n\nconst Projects = (props: PageProps<Queries.ProjectsQuery>) => {\n  const groups = [...props.data.allFile.group];\n\n  groups.sort((a, b) => {\n    const aDate = new Date(a.nodes[0].childMdx?.frontmatter?.date ?? \"\");\n    const bDate = new Date(b.nodes[0].childMdx?.frontmatter?.date ?? \"\");\n    return bDate.getTime() - aDate.getTime();\n  });\n\n  return (\n    <Layout page=\"projects\" large>\n      <div sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {groups.flatMap((group) => (\n          <div\n            sx={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"stretch\",\n            }}\n          >\n            <h3\n              sx={{\n                width: \"100%\",\n              }}\n            >\n              <span\n                sx={{\n                  backgroundColor: \"white\",\n                  border: \"solid #eee 1px\",\n                  borderRadius: \"20px\",\n                  paddingY: 1,\n                  paddingX: 3,\n                }}\n              >\n                {group.fieldValue}\n              </span>\n            </h3>\n            {group.nodes\n              .filter((node) => node.childMdx?.frontmatter?.title)\n              .map((node) => {\n                const fm = node.childMdx?.frontmatter!;\n                return (\n                  <div\n                    key={fm.title}\n                    sx={{\n                      padding: \"1rem\",\n                      flex: 1,\n                      margin: 2,\n                      maxWidth: fm.hero_image ? \"450px\" : \"300px\",\n                      minWidth: \"200px\",\n                      borderTopRightRadius: 24,\n                      borderBottomRightRadius: 24,\n                      backgroundColor:\n                        (tagsColor[(fm.tags ?? [\"default\"])[0]] ??\n                          tagsColor.default) + \"40\",\n                      borderLeft:\n                        \"solid \" + (tagsColor[(fm.tags ?? [\"default\"])[0]] ??\n                          tagsColor.default) + \" 8px\",\n                    }}\n                  >\n                    <div\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"stretch\",\n                        width: \"100%\",\n                        gap: 3,\n                      }}\n                    >\n                      {fm.hero_image && (\n                        <div\n                          sx={{\n                            alignSelf: \"center\",\n                            borderRadius: 8,\n                            overflow: \"hidden\",\n                            maxWidth: \"50%\",\n                          }}\n                        >\n                          <GatsbyImage\n                            image={getImage(fm.hero_image)}\n                            alt={fm.hero_image_alt}\n                          />\n                        </div>\n                      )}\n                      <div sx={{ flex: 1 }}>\n                        {fm.inline || !fm.slug ? (\n                          <h2 sx={{ textAlign: \"center\", width: \"100%\" }}>\n                            {fm.title}\n                          </h2>\n                        ) : (\n                          <Link to={fm.slug}>\n                            <h2 sx={{ textAlign: \"center\", width: \"100%\" }}>\n                              {fm.title}\n                            </h2>\n                          </Link>\n                        )}\n                        <p>{fm.description}</p>\n                        {fm.inline && (\n                          <ReactMarkdown>\n                            {node.childMdx?.body ?? \"\"}\n                          </ReactMarkdown>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query Projects {\n    allFile(filter: { sourceInstanceName: { eq: \"projects\" } }) {\n      group(field: { childMdx: { frontmatter: { date: SELECT } } }) {\n        fieldValue\n        nodes {\n          childMdx {\n            frontmatter {\n              title\n              description\n              date(formatString: \"YYYY\")\n              tags\n              inline\n              slug\n              hero_image_alt\n              hero_image {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n            body\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Projects;\n\nexport const Head = () => <SiteHead title=\"Projects\" />;\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["isCallable","tryToString","$TypeError","TypeError","module","exports","argument","wellKnownSymbol","create","defineProperty","UNSCOPABLES","ArrayPrototype","Array","prototype","undefined","configurable","value","key","isObject","$String","String","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","O","length","index","includes","indexOf","uncurryThis","toString","stringSlice","slice","it","global","Object","writable","error","fails","get","documentAll","document","all","IS_HTMLDDA","EXISTS","createElement","navigator","userAgent","match","version","process","Deno","versions","v8","split","exec","test","bind","hasOwnProperty","NATIVE_BIND","call","Function","apply","arguments","FunctionPrototype","uncurryThisWithBind","fn","namespace","method","aCallable","isNullOrUndefined","V","P","func","check","Math","globalThis","window","self","g","this","toObject","hasOwn","getBuiltIn","DESCRIPTORS","a","classof","$Object","propertyIsEnumerable","$documentAll","isPrototypeOf","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","ceil","floor","trunc","x","n","activeXDocument","anObject","definePropertiesModule","enumBugKeys","hiddenKeys","html","documentCreateElement","sharedKey","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","LT","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObject","ActiveXObject","iframeDocument","iframe","JS","domain","style","display","appendChild","src","contentWindow","open","F","Properties","result","f","V8_PROTOTYPE_DEFINE_BUG","definePropertyModule","objectKeys","defineProperties","props","keys","IE8_DOM_DEFINE","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","getOwnPropertyDescriptor","ENUMERABLE","CONFIGURABLE","WRITABLE","Attributes","current","enumerable","push","object","names","i","internalObjectKeys","input","pref","val","valueOf","shared","uid","defineGlobalProperty","SHARED","store","IS_PURE","mode","copyright","license","source","V8_VERSION","getOwnPropertySymbols","symbol","Symbol","sham","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","isSymbol","getMethod","ordinaryToPrimitive","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","name","addToUnscopables","toStr","gOPD","isArray","arr","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","newValue","getProperty","extend","copy","copyIsArray","clone","deep","tagsColor","forevr","systems","ocaml","hardware","default","groups","_toConsumableArray","data","allFile","group","sort","b","_a$nodes$0$childMdx$f","_a$nodes$0$childMdx","_a$nodes$0$childMdx$f2","_b$nodes$0$childMdx$f","_b$nodes$0$childMdx","_b$nodes$0$childMdx$f2","aDate","Date","nodes","childMdx","frontmatter","date","getTime","jsx","Layout","page","large","sx","flexWrap","flatMap","justifyContent","width","backgroundColor","border","borderRadius","paddingY","paddingX","fieldValue","filter","node","_node$childMdx","_node$childMdx$frontm","title","map","_node$childMdx2","_tagsColor$","_fm$tags","_tagsColor$2","_fm$tags2","_node$childMdx$body","_node$childMdx3","fm","padding","flex","margin","maxWidth","hero_image","minWidth","borderTopRightRadius","borderBottomRightRadius","tags","borderLeft","flexDirection","alignItems","gap","alignSelf","overflow","GatsbyImage","image","getImage","alt","hero_image_alt","inline","slug","textAlign","Link","to","description","ReactMarkdown","body","Head","SiteHead","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","lineno","column","updatePosition","lines","lastIndexOf","position","start","line","Position","whitespace","end","errorsList","msg","err","Error","reason","filename","silent","re","m","comments","rules","c","comment","pos","charAt","type","declaration","prop","ret","property","decl","decls","declarations","isBuffer","u","for","d","e","h","k","l","p","q","t","v","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","StyleToObject","output","hasIterator","len","stringifyPosition","point","VFileMessage","place","origin","parts","super","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","messages","history","stored","assertNonEmpty","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","middleware","called","wrapped","parameters","fnExpectsCallback","done","Promise","then","wrap","use","middelware","unified","base","transformers","attachers","frozen","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","processSync","destination","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","factorySpace","effects","ok","limit","size","enter","prefix","consume","exit","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","seen","nok","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","media","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","extensions","combineExtensions","concat","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","preprocess","combined","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","trimLine","codePointAt","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","shift","tableContent","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","defaultUnknownHandler","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","merge","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","operator","orient","orientation","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","valid","dash","cap","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","linkTarget","level","transformImageUri","getInputElement","getElementsBeforeCount","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","propTypes"],"sourceRoot":""}