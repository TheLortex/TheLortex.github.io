{"version":3,"file":"component---src-pages-mdx-frontmatter-variant-mdx-frontmatter-slug-tsx-content-file-path-src-data-projects-mean-field-index-mdx-9ac2511379a8729c4db2.js","mappings":"sNAAA,EAAe,IAA0B,2DCIzC,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,mEAAoE,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,2ZAA4Z,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,wQAAyQ,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,KAAMK,EAAAA,cAAoBT,EAAYK,GAAI,KAAMI,EAAAA,cAAoBT,EAAYM,EAAG,CACliCI,KAAM,+CACL,UAAW,eAAgB,KAAMD,EAAAA,cAAoBT,EAAYK,GAAI,KAAM,cAAeI,EAAAA,cAAoB,IAAK,CACpHC,KAAMC,GACL,WAAY,MACjB,CAKA,MAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWd,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCfA,MAAMe,EAAWf,IACf,IAAIgB,EAAiBC,EAAuBC,EAAcC,EAAkBC,EAAkBC,EAAuBC,EAAkBC,EACvI,MAAMC,EAA8C,QAAtCR,EAAkBhB,EAAMyB,KAAKC,WAAqC,IAApBV,GAAgG,QAAzDC,EAAwBD,EAAgBW,mBAAmD,IAA1BV,OAA3E,EAAuHA,EAAsBO,KAChOI,EAAgG,QAA5EV,EAAeM,aAAmC,EAASA,EAAKK,cAAqC,IAAjBX,GAA0BA,GAAoE,QAA3CC,EAAmBW,EAAAA,UAAUN,EAAK,WAAsC,IAArBL,EAA8BA,EAAuCW,EAAAA,UAAAA,QACzR,OAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAQ,CACjBC,KAA8C,QAAvCb,EAAmBpB,EAAMyB,KAAKC,WAAsC,IAArBN,GAAkG,QAA1DC,EAAwBD,EAAiBO,mBAAmD,IAA1BN,OAA5E,EAAwHA,EAAsBa,QAClOC,QAAiD,QAAvCb,EAAmBtB,EAAMyB,KAAKC,WAAsC,IAArBJ,GAAkG,QAA1DC,EAAwBD,EAAiBK,mBAAmD,IAA1BJ,OAA5E,EAAwHA,EAAsBa,QACpOL,EAAAA,EAAAA,IAAI,MAAO,CACZM,GAAI,CACFC,QAAS,CAAC,EAAG,MAEdP,EAAAA,EAAAA,IAAI,MAAO,CACZM,GAAI,CACFE,WAAY,SAAWX,EAAkB,OACzCY,SAAU,CAAC,EAAG,KAEfxC,EAAMyC,WAAW,EAIP,SAASC,EAAiB1C,GACvC,OAAOU,EAAAA,cAAoBK,EAAUf,EAAOU,EAAAA,cAAoBiC,EAAqB3C,GACvF,CACO,MAAM4C,EAAOA,KAAMb,EAAAA,EAAAA,IAAI,QAAS,KAAM,W","sources":["webpack://lucas-pluvinage/./src/data/projects/mean-field/rapport-EPFL.pdf","webpack://lucas-pluvinage/./src/data/projects/mean-field/index.mdx","webpack://lucas-pluvinage/./src/pages/{mdx.frontmatter__variant}/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/rapport-EPFL-1ee69607eba4801e1e03dd88fbafc075.pdf\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Report from \"./rapport-EPFL.pdf\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Internship under the supervision of Pierre Baqué and Pascal Fua\"), \"\\n\", React.createElement(_components.p, null, \"Combining backpropagation with Mean-Field inference models: the goal was\\nto study these techniques in order to learn the rules of Sudoku as an\\nill-posed problem. Indeed given a grid it's possible to have multiple\\nvalid solutions. Pierre Baqué's (my internship mentor) Multi-Modal\\nMean-Field model should be able to cope with that kind of problems,\\ncombined with traditional machine learning techniques.\"), \"\\n\", React.createElement(_components.p, null, \"Learning the Sudoku rules as a set of constraints have been a success for\\nthe 4x4 version but I faced combinatorial difficulties in the 9x9\\n(traditional Sudoku) case, as inferring correct grids given a set of CRF\\nconstraints was proven to be a hard problem.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"//github.com/TheLortex/mean-field-inference\"\n  }, \"Github\"), \" repository\"), \"\\n\", React.createElement(_components.li, null, \"Internship \", React.createElement(\"a\", {\n    href: Report\n  }, \"report\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/lucas/projects/TheLortex.github.io/src/data/projects/mean-field/index.mdx\";\nimport {jsx} from \"theme-ui\";\nimport {Layout} from \"../../components/Layout\";\nimport {tagsColor} from \"../projects\";\nconst Projects = props => {\n  var _props$data$mdx, _props$data$mdx$front, _tags$length, _tagsColor$tags$, _props$data$mdx2, _props$data$mdx2$fron, _props$data$mdx3, _props$data$mdx3$fron;\n  const tags = (_props$data$mdx = props.data.mdx) === null || _props$data$mdx === void 0 ? void 0 : (_props$data$mdx$front = _props$data$mdx.frontmatter) === null || _props$data$mdx$front === void 0 ? void 0 : _props$data$mdx$front.tags;\n  const backgroundColor = ((_tags$length = tags === null || tags === void 0 ? void 0 : tags.length) !== null && _tags$length !== void 0 ? _tags$length : 0 > 0) ? (_tagsColor$tags$ = tagsColor[tags[0]]) !== null && _tagsColor$tags$ !== void 0 ? _tagsColor$tags$ : tagsColor.default : tagsColor.default;\n  return jsx(Layout, {\n    page: (_props$data$mdx2 = props.data.mdx) === null || _props$data$mdx2 === void 0 ? void 0 : (_props$data$mdx2$fron = _props$data$mdx2.frontmatter) === null || _props$data$mdx2$fron === void 0 ? void 0 : _props$data$mdx2$fron.variant,\n    article: (_props$data$mdx3 = props.data.mdx) === null || _props$data$mdx3 === void 0 ? void 0 : (_props$data$mdx3$fron = _props$data$mdx3.frontmatter) === null || _props$data$mdx3$fron === void 0 ? void 0 : _props$data$mdx3$fron.title\n  }, jsx(\"div\", {\n    sx: {\n      padding: [1, 3]\n    }\n  }, jsx(\"div\", {\n    sx: {\n      borderLeft: \"solid \" + backgroundColor + \" 8px\",\n      paddingX: [2, 4]\n    }\n  }, props.children)));\n};\nconst query = \"1596219016\";\nProjects\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Projects, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = () => jsx(\"title\", null, \"Projects\");\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","a","_provideComponents","components","React","href","Report","wrapper","MDXLayout","Projects","_props$data$mdx","_props$data$mdx$front","_tags$length","_tagsColor$tags$","_props$data$mdx2","_props$data$mdx2$fron","_props$data$mdx3","_props$data$mdx3$fron","tags","data","mdx","frontmatter","backgroundColor","length","tagsColor","jsx","Layout","page","variant","article","title","sx","padding","borderLeft","paddingX","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head"],"sourceRoot":""}